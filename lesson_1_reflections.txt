How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    It made me quickly see the changes and the errors on those changes.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    It makes find the changes easier.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    MANUAL COMMIT
    Pros
    * The programmer knows when a logical change has been made, therefore the programmer's judgment is better in knowing when to commit.

    Cons
    * The programmer might have a wrong judgment or too timid to do commits.

    AUTOMATIC COMMIT
    Pros
    * You would not forget when to commit.

    Cons
    * You might end up with way too many commits and you do not understand that changes that were made.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Adding a feature may mean that you need to change multiple documents, therefore Git allows multiple files in one commit.
    Google Docs commits automatically, therefore it would commit per file.

How can you use the commands git log and git diff to view the history of files?

    'git log' will tell when the changes were made and their ID.
    'git diff' will tell what changes occured comparing two commits.

How might using version control make you more confident to make changes that
could break something?

    If I made changes and did not see that it broke something I could always go back to a previous version without the bug. Which makes me more confident to make mistakes because I know that I will be able to go back.

Now that you have your workspace set up, what do you want to try using Git for?

    I want to create a big program that would help others!
